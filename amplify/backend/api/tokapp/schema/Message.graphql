type Channel @model @auth(rules: [
  { allow: private}
]){
    channel_id: ID! @primaryKey
    profiles: [ChannelProfile]! @hasMany(indexName: "byProfile")
    messages: [Message]! @hasMany(indexName: "byChannel", fields: ["channel_id"])
    readStatus: [ReadStatus] @hasMany(indexName: "byChannel", fields: ["channel_id"])
}

type ChannelProfile @model @auth(rules: [
  { allow: private}
]){
    id: ID!
    channel_id: ID! @index(name: "byProfile")
    profile_id: ID!
    profile: Profile @hasOne(fields: ["profile_id"])
}

type Message @model @auth(rules: [
  { allow: private}
]){
    id: ID!
    channel_id: ID! @index(name: "byChannel")
    message: String!
    sender: Profile!
    date: String!
}

type ReadStatus @model @auth(rules: [
  { allow: private}
]){
    id: ID!
    channel_id: ID! @index(name: "byChannel")
    profileID: ID!
    date: String
}

type Query {
    listChannelsBySender(profileId: ID!): [Channel] @function(name: "customResolver-${env}")
}